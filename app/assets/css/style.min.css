/*!
 * creative-template-basic
 * 
 * 
 * @author somil
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
@import url(flexboxgrid.min.css);body{width:100%;overflow-X:hidden}.app-container{width:95%;margin:0 auto}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header .main-logo,.header .main-logo a,.header .main-logo a h1{display:inline-block}.nav-items a{font-family:montserrat-regular;text-transform:uppercase;font-size:1.1em;padding-right:3em;height:50px;text-align:center;line-height:50px;text-decoration:none;transition:all .3s ease-in}section{padding:3em 0 0}.banner{padding:.3em;margin:.5em}.main-logo{display:inline-block;width:90%}.main-logo img{margin-bottom:2px}.main-logo h1,.main-logo img{display:inline-block;vertical-align:middle}.main-logo h1{margin-left:.2em}.section-1 .jumbotron{position:relative;background:url(../img/jumbo.png) no-repeat 50%;background-size:cover;z-index:1}.section-1 .jumbotron:before{content:"";position:absolute;display:block;top:0;left:0;width:100%;height:100%;background-color:#000;opacity:.75;z-index:-1}.section-1 .content-center{width:90%;margin:0 auto;padding-top:6.5em;z-index:10}.section-1 .content-center h2,.section-1 .content-center p{color:#fff}.section-1 .content-center p{margin:1.1em 0 2em}.section-1 .content-center button{margin-bottom:4em}.service,.values .value-item{margin:2em 0 0}.service span,.values .value-item span{display:inline-block;width:62px;height:62px;background:url(../img/icons-sheet.png) no-repeat}.service span.service-icon-1,.values .value-item span.service-icon-1{background-position:65.905% .049%}.service span.service-icon-2,.values .value-item span.service-icon-2{background-position:75.12% 13.225%}.service span.service-icon-3,.values .value-item span.service-icon-3{background-position:33.987% 1.139%}.service h4,.values .value-item h4{margin:1em auto}.service p,.values .value-item p{max-width:80%;margin-left:10%}.features{z-index:1}.features .setting-icon{z-index:-3;background-color:#e9e9e9}.features .description{position:relative;display:block;background:url(../img/sea.png) no-repeat 50%;background-size:cover}.features .description:before{left:-205px;background:url(../img/icons-sheet.png) no-repeat;background-position:1.799% 92.537%;z-index:-2}.features .description:after,.features .description:before{content:"";position:absolute;display:block;top:0;height:100%;width:100%}.features .description:after{left:0;background-color:#222;opacity:.7;z-index:3}.features .description .content{position:relative;z-index:4;margin:4em}.features .description .content h3,.features .description .content p{color:#fff}.features .description .content h3 span{color:#7cc576}.features li span{display:inline-block;width:24px;height:24px;float:left;border:2px solid hsla(0,0%,100%,.6);background:url(../img/icons-sheet.png) no-repeat;background-position:15% .02%;border-radius:50%;margin-right:1em}.features li p{vertical-align:middle;line-height:30px}.projects{position:relative;background-image:url(../img/tablet.png);background-position:100% 60%;background-size:50% 60%;background-repeat:no-repeat}.projects .project-footer,.projects .project-header{margin:3em 0 0;max-width:400px}.projects .project-footer h4,.projects .project-header h4{margin:1.2em 0}.projects .project-footer a{font-family:montserrat-regular;text-transform:uppercase;font-size:1.1em;color:#7cc576}.projects .project-footer a span{display:inline-block;font-weight:700;transition:all .5s ease}.project-items{position:relative;display:block;margin:2em auto}.project-items .project{display:block;position:relative;margin:0 auto;width:100%;min-height:80px}.project-items .project span{display:block;float:left;width:65px;height:65px;background:url(../img/icons-sheet.png) no-repeat;border:2px solid #222;border-radius:50%}.project-items .project span.project-icon-1{background-position:-1% -1.2%}.project-items .project span.project-icon-2{background-position:48.4% -2%}.project-items .project span.project-icon-3{background-position:64% 12.8%}.project-items .project .project-details{display:inline-block;float:left;width:70%;margin-left:.5em}.project-items .project .project-details .project-heading{font-weight:700;font-size:1.1em;color:#222}.values{background-color:#f9f9f9}.values .container{margin:3em 0;padding:5em 0}.values .values-header{margin:0 0 1.3em}.values .value-item span{width:80px;height:80px;border:4px solid rgba(0,0,0,.4);border-radius:50%;background:url(../img/icons-sheet.png) no-repeat}.values .value-item span.values-icon-1{background-position:86.4% 11%}.values .value-item span.values-icon-2{background-position:6.9% -.8%}.values .value-item span.values-icon-3{background-position:95.5% 19.69%}.customers .customers-header{margin:.3em 0 4em}.customers .customer{margin-bottom:2em}.customers .customer img{width:80%;max-width:240px;background-color:#f9f9f9}.customers .customer .description{padding:3em;line-height:1.5em;background-color:#f9f9f9}.customers .customer span{color:#7cc576;font-size:.95em}.contactus{background:#7cc576}.contactus h3{color:#fff}.sponsors span{width:161px;height:30px;background:url(../img/icons-sheet.png) no-repeat}.sponsors span .sponsor-icon-1,.sponsors span .sponsor-icon-2,.sponsors span .sponsor-icon-3,.sponsors span .sponsor-icon-4{background-position:79.842% 55.408%}.button{max-width:200px;background:#7cc576;text-align:center;padding:14px 24px;cursor:pointer}.button,.button a{transition:all 1s ease}.button a{font-family:montserrat-regular;text-transform:uppercase;font-size:1.1em;color:#fff}.button:hover{background:#fff}.button:hover a{color:#7cc576}.button-primary{border-radius:30px}.button-secondary{border-radius:8px;margin-top:1em;background:transparent;border:3px solid #fff}.button-secondary a{color:#fff}.button-secondary a:hover{color:#7cc576}@font-face{font-family:montserrat-regular;src:url(../fonts/montserrat-regular-webfont.eot);src:url(../fonts/montserrat-regular-webfont.eot) format("embedded-opentype"),url(../fonts/montserrat-regular-webfont.woff2) format("woff2"),url(../fonts/montserrat-regular-webfont.woff) format("woff"),url(../fonts/montserrat-regular-webfont.ttf) format("truetype"),url(../fonts/montserrat-regular-webfont.svg) format("svg");font-weight:400;font-style:normal}@font-face{font-family:montserrat-bold;src:url(../fonts/montserrat-bold-webfont.eot);src:url(../fonts/montserrat-bold-webfont.eot) format("embedded-opentype"),url(../fonts/montserrat-bold-webfont.woff2) format("woff2"),url(../fonts/montserrat-bold-webfont.woff) format("woff"),url(../fonts/montserrat-bold-webfont.ttf) format("truetype"),url(../fonts/montserrat-bold-webfont.svg) format("svg");font-weight:400;font-style:normal}@font-face{font-family:robotoslab-regular;src:url(../fonts/robotoslab-regular-webfont.eot);src:url(../fonts/robotoslab-regular-webfont.eot) format("embedded-opentype"),url(../fonts/robotoslab-regular-webfont.woff2) format("woff2"),url(../fonts/robotoslab-regular-webfont.woff) format("woff"),url(../fonts/robotoslab-regular-webfont.ttf) format("truetype"),url(../fonts/robotoslab-regular-webfont.svg) format("svg");font-weight:400;font-style:normal}body{font-family:robotoslab-regular,serif;font-size:14px}h1,h2,h3,h4,h5{font-family:montserrat-bold,sans-serif;text-transform:uppercase;color:#222}h1{font-size:1.1em;letter-spacing:.05em;color:#555}h2{font-size:3em}h3{font-size:2em;margin-bottom:.4em}h4{font-size:1.2em}.text-small{font-size:.9em}p{color:#777}li,ul{list-style-type:none}.content-center{text-align:center}*{margin:0;padding:0;border:0;outline:0;box-sizing:border-box}a{text-decoration:none;color:inherit}.clearfix:after{content:"";display:block;width:100%;clear:both}@media only screen and (min-width:320px){.nav-items a{padding-right:.3em}}@media only screen and (min-width:480px){.nav-items a{padding-right:.3em}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
